{"Structs/TypeDecoder.html#/s:11TypeDecoderAAV6decodeAA0A4InfoOs9Decodable_pXpKFZ":{"name":"decode(_:)","abstract":"<p>returns a TypeInfo enum which describes the type passed.</p>","parent_name":"TypeDecoder"},"Structs/OrderedDictionary.html#/s:11TypeDecoder17OrderedDictionaryVACyxq_Gycfc":{"name":"init()","abstract":"<p>OrderedDictionary constructor</p>","parent_name":"OrderedDictionary"},"Structs/OrderedDictionary.html#/s:11TypeDecoder17OrderedDictionaryV5countSivp":{"name":"count","abstract":"<p>Read only property that provides the number of elements in the OrderedDictionary.</p>","parent_name":"OrderedDictionary"},"Structs/OrderedDictionary.html#/s:11TypeDecoder17OrderedDictionaryVq_Sgxcip":{"name":"subscript(_:)","abstract":"<p>Provides a way to add and remove elements from the","parent_name":"OrderedDictionary"},"Structs/OrderedDictionary.html#/s:11TypeDecoder17OrderedDictionaryVq_SgSicip":{"name":"subscript(_:)","abstract":"<p>Return the element value at the numeric index specified.</p>","parent_name":"OrderedDictionary"},"Structs/OrderedDictionary.html#/s:11TypeDecoder17OrderedDictionaryV11descriptionSSvp":{"name":"description","abstract":"<p>Read only property that provides a String containing the key:value pairs in the OrderedDictionary.</p>","parent_name":"OrderedDictionary"},"Structs/OrderedDictionary.html#/s:11TypeDecoder17OrderedDictionaryV4nextx_q_tSgyF":{"name":"next()","abstract":"<p>Method to allow iteration over the contents of the","parent_name":"OrderedDictionary"},"Structs/OrderedDictionary.html":{"name":"OrderedDictionary"},"Structs/TypeDecoder.html":{"name":"TypeDecoder","abstract":"<p>public TypeDecoder struct</p>"},"Enums/TypeInfo.html#/s:11TypeDecoder0A4InfoO6singleACypXp_ypXptcACmF":{"name":"single","abstract":"<p>Case representing a simple type which is not recursive</p>","parent_name":"TypeInfo"},"Enums/TypeInfo.html#/s:11TypeDecoder0A4InfoO5keyedACypXp_AA17OrderedDictionaryVySSACGtcACmF":{"name":"keyed","abstract":"<p>Case representing a struct or a class containing the object type as","parent_name":"TypeInfo"},"Enums/TypeInfo.html#/s:11TypeDecoder0A4InfoO12dynamicKeyedACypXp_AC3keyAC5valuetcACmF":{"name":"dynamicKeyed","abstract":"<p>Case representing a Dictionary containing the top level type of the","parent_name":"TypeInfo"},"Enums/TypeInfo.html#/s:11TypeDecoder0A4InfoO7unkeyedACypXp_ACtcACmF":{"name":"unkeyed","abstract":"<p>Case representing an Array containing the top level type of the array","parent_name":"TypeInfo"},"Enums/TypeInfo.html#/s:11TypeDecoder0A4InfoO8optionalA2CcACmF":{"name":"optional","abstract":"<p>Case representing an Optional type containing its nested type</p>","parent_name":"TypeInfo"},"Enums/TypeInfo.html#/s:11TypeDecoder0A4InfoO6cyclicACypXpcACmF":{"name":"cyclic","abstract":"<p>Case representing a cyclic type so the associated type is the top level type</p>","parent_name":"TypeInfo"},"Enums/TypeInfo.html#/s:11TypeDecoder0A4InfoO6opaqueACypXpcACmF":{"name":"opaque","abstract":"<p>Case representing a type that could not be decoded</p>","parent_name":"TypeInfo"},"Enums/TypeInfo.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"TypeInfo"},"Enums/TypeInfo.html#/s:s8HashableP9hashValueSivp":{"name":"hashValue","parent_name":"TypeInfo"},"Enums/TypeInfo.html#/s:s9EquatableP2eeoiSbx_xtFZ":{"name":"==(_:_:)","parent_name":"TypeInfo"},"Enums/TypeInfo.html":{"name":"TypeInfo","abstract":"<p>Main enum used to describe a decoded type</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}